{"ast":null,"code":"var _jsxFileName = \"/Users/B0208058/Documents/my small ecommorce/ecommerce/src/components/searchAndBrowse/CartList.js\";\nimport React, { Component } from 'react';\nimport HeaderNavbar from '../HeaderNavbar';\nimport UserService from '../service/UserService';\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Typography, Paper } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { resolveResponse } from \"../utils/ResponseHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductCategory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = productId => {\n      console.log(productId);\n      this.props.history.push('/product-details/?id=' + productId);\n    };\n\n    this.capitalizeFirstLetter = string => {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    };\n\n    this.updateQty = (row, num) => {\n      //row.quantity = row.quantity + num; \n      let tempList = this.state.cartList;\n      tempList.forEach(element => {\n        if (element.productId == row.productId) {\n          element.quantity = row.quantity + num;\n          element.price = element.quantity * parseFloat(row.price);\n        }\n      });\n      localStorage.setItem('cartList', JSON.stringify(tempList));\n      this.setState({\n        cartList: tempList\n      });\n      console.log(row);\n    };\n\n    this.quantityChange = row => {\n      // console.log(e.target.value)\n      // if (e.target.value <= 0)\n      //     this.setState({ quantity: 1 })\n      // else\n      //     this.setState({ quantity: e.target.value })    \n      console.log(row);\n    };\n\n    this.state = {\n      ProductCategory: [],\n      waitingFlag: true,\n      categoryName: '',\n      quantity: 0,\n      cartList: localStorage.getItem('cartList') ? JSON.parse(localStorage.getItem('cartList')) : []\n    };\n  }\n\n  componentDidMount() {\n    let queryStr = window.location.href.split('?')[1] && window.location.href.split('?')[1].split('=')[1];\n    this.setState({\n      categoryName: decodeURIComponent(queryStr)\n    });\n    UserService.getProductCategory(queryStr).then(res => {\n      //   let data = resolveResponse(res); //common response handler\n      if (res && res.data) {\n        this.setState({\n          ProductCategory: res.data,\n          waitingFlag: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        direction: \"row\",\n        container: true,\n        spacing: 5,\n        style: {\n          padding: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"p\",\n            children: [\"Cart(\", this.state.cartList.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), this.state.cartList && this.state.cartList.map(row => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              direction: \"row\",\n              container: true,\n              spacing: 1,\n              style: {\n                padding: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  style: {\n                    width: \"100px\",\n                    height: \"100px\"\n                  },\n                  src: row.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 8,\n                children: [row.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 53\n                }, this), \" \\u20B9 \", row.price, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 48\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => this.updateQty(row, 1),\n                  children: [\" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 107\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" Qty \", row.quantity, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => this.updateQty(row, -1),\n                  children: [\" \", /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 107\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)), this.state.waitingFlag ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          style: {\n            padding: \"25px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 47\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProductCategory;","map":{"version":3,"sources":["/Users/B0208058/Documents/my small ecommorce/ecommerce/src/components/searchAndBrowse/CartList.js"],"names":["React","Component","HeaderNavbar","UserService","Grid","CircularProgress","Typography","Paper","Button","TextField","AddIcon","RemoveIcon","resolveResponse","ProductCategory","constructor","props","handleClick","productId","console","log","history","push","capitalizeFirstLetter","string","charAt","toUpperCase","slice","updateQty","row","num","tempList","state","cartList","forEach","element","quantity","price","parseFloat","localStorage","setItem","JSON","stringify","setState","quantityChange","waitingFlag","categoryName","getItem","parse","componentDidMount","queryStr","window","location","href","split","decodeURIComponent","getProductCategory","then","res","data","render","padding","length","map","width","height","image","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport HeaderNavbar from '../HeaderNavbar'\nimport UserService from '../service/UserService'\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Typography, Paper } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\n\nimport { resolveResponse } from \"../utils/ResponseHandler\";\nclass ProductCategory extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ProductCategory: [],\n            waitingFlag: true,\n            categoryName: '',\n            quantity:0,\n            cartList: localStorage.getItem('cartList') ? JSON.parse(localStorage.getItem('cartList')) : []\n        }\n    }\n\n\n    componentDidMount() {\n\n        let queryStr = window.location.href.split('?')[1] && window.location.href.split('?')[1].split('=')[1];\n        this.setState({ categoryName: decodeURIComponent(queryStr) })\n        UserService.getProductCategory(queryStr)\n            .then((res) => {\n                //   let data = resolveResponse(res); //common response handler\n                if (res && res.data) {\n                    this.setState({ ProductCategory: res.data, waitingFlag: false })\n                }\n            });\n    }\n\n    handleClick = (productId) => {\n        console.log(productId)\n        this.props.history.push('/product-details/?id=' + productId);\n    }\n\n    capitalizeFirstLetter = (string) => {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    updateQty=(row, num)=>{\n         //row.quantity = row.quantity + num; \n        \n         let tempList = this.state.cartList; \n         tempList.forEach(element => {\n            if(element.productId == row.productId){\n                element.quantity = row.quantity + num; \n                element.price = element.quantity * parseFloat(row.price); \n            }\n           \n         });\n\n         localStorage.setItem('cartList', JSON.stringify(tempList)); \n         this.setState({cartList : tempList})\n         console.log(row)\n    }\n    quantityChange = (row) => {\n\n        // console.log(e.target.value)\n        // if (e.target.value <= 0)\n        //     this.setState({ quantity: 1 })\n        // else\n        //     this.setState({ quantity: e.target.value })    \n\n        console.log(row)\n\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <HeaderNavbar />\n\n                <Grid direction=\"row\" container spacing={5} style={{ padding: \"20px\" }}>\n\n                    <Grid item xs={12} sm={12} >\n                        <Typography variant=\"h5\" component=\"p\" >\n                            Cart({this.state.cartList.length})\n                        </Typography>\n                    </Grid>\n\n\n                    {this.state.cartList && this.state.cartList.map(row => (\n\n                        <Grid item xs={12} sm={8}>\n                            <Paper>\n                                <Grid direction=\"row\" container spacing={1} style={{ padding: \"10px\" }}>\n                                    <Grid item xs={12} sm={4} >\n                                        <img style={{ width: \"100px\", height: \"100px\" }} src={row.image} />\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={8} >\n                                        {row.title} <br /> &#8377; {row.price}\n                                        <br /> <br />\n                                        <Button variant=\"contained\" onClick={()=>this.updateQty(row, 1)}> <AddIcon /> </Button>   \n                                        \n                                        <span> Qty {row.quantity} </span>\n                                    \n                                        <Button variant=\"contained\" onClick={()=>this.updateQty(row,-1)}> <RemoveIcon /> </Button> \n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n\n                    ))}\n\n\n                    {this.state.waitingFlag ? <CircularProgress style={{ padding: \"25px\" }} /> : \"\"}\n                </Grid>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ProductCategory;"]},"metadata":{},"sourceType":"module"}
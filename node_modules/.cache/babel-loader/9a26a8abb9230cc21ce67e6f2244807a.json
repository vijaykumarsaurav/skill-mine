{"ast":null,"code":"import _classCallCheck from\"/Users/B0208058/Documents/my small ecommorce/ecommerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/B0208058/Documents/my small ecommorce/ecommerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/B0208058/Documents/my small ecommorce/ecommerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/B0208058/Documents/my small ecommorce/ecommerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import HeaderNavbar from'../HeaderNavbar';import UserService from'../service/UserService';import Grid from'@mui/material/Grid';import CircularProgress from'@mui/material/CircularProgress';import{Typography,Paper}from'@mui/material';import TextField from'@mui/material/TextField';import'./ProductStyle.css';import Button from'@mui/material/Button';import Notify from'../utils/Notify';import{resolveResponse}from\"../utils/ResponseHandler\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProductDetails=/*#__PURE__*/function(_Component){_inherits(ProductDetails,_Component);var _super=_createSuper(ProductDetails);function ProductDetails(props){var _this;_classCallCheck(this,ProductDetails);_this=_super.call(this,props);_this.addToCart=function(productDetails){var cartList=localStorage.getItem('cartList')?JSON.parse(localStorage.getItem('cartList')):[];console.log(\"cartList\",cartList);var cartMsg='';var isProductAlreadyAdded=cartList.filter(function(item){return item.productId==productDetails.id;});if(isProductAlreadyAdded.length===0){cartList.push({productId:productDetails.id,price:productDetails.price,title:productDetails.title,image:productDetails.image,quantity:parseInt(_this.state.quantity)});cartMsg=\"\".concat(_this.state.quantity,\" \").concat(_this.state.quantity>1?\"same items added\":\"item added\");}else{isProductAlreadyAdded[0].quantity=parseInt(isProductAlreadyAdded[0].quantity)+parseInt(_this.state.quantity);cartMsg=\"\".concat(isProductAlreadyAdded[0].quantity,\" same items added\");}_this.setState({message:cartMsg,totalItemIntoCart:cartList.length});//    setTimeout(() => {\n//     this.setState({message : ''}); \n//    }, 5000);\n//  Notify.showSuccess(msg);\nlocalStorage.setItem('cartList',JSON.stringify(cartList));};_this.quantityChange=function(e){if(e.target.value<=0)_this.setState({quantity:1});else _this.setState({quantity:e.target.value});};_this.state={title:'',productDetails:\"\",waitingFlag:true,quantity:1,message:\"\",totalItemIntoCart:0};return _this;}_createClass(ProductDetails,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var productId=window.location.href.split('?')[1]&&window.location.href.split('?')[1].split('=')[1];UserService.getProductDetails(productId).then(function(res){//   let data = resolveResponse(res); //common response handler\nconsole.log(res.data);if(res&&res.data){_this2.setState({title:res.data.title,waitingFlag:false,productDetails:res.data});}});}},{key:\"render\",value:function render(){var _this3=this;var productDetails=this.state.productDetails;console.log(\"productDetails\",productDetails);return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(HeaderNavbar,{totalItem:this.state.totalItemIntoCart}),this.state.waitingFlag?/*#__PURE__*/_jsx(CircularProgress,{style:{padding:\"25px\"}}):/*#__PURE__*/_jsxs(Grid,{direction:\"row\",container:true,spacing:5,style:{padding:\"20px\"},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,style:{textAlign:\"center\"},children:/*#__PURE__*/_jsxs(Paper,{style:{textAlign:\"center\",cursor:'pointer',padding:\"10px\"},children:[/*#__PURE__*/_jsx(\"img\",{style:{width:\"50%\",height:\"400px\"},src:productDetails.image}),\" \",/*#__PURE__*/_jsx(\"br\",{}),productDetails.title]})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,style:{textAlign:\"left\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",component:\"p\",children:productDetails.title}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",component:\"p\",children:[\"\\u20B9 \",productDetails.price]}),/*#__PURE__*/_jsx(\"br\",{}),\"Ratings \",productDetails.rating&&productDetails.rating.rate,\"* (\",productDetails.rating&&productDetails.rating.count,\")\",/*#__PURE__*/_jsx(\"br\",{}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(TextField,{type:\"number\",onChange:this.quantityChange,value:this.state.quantity,style:{width:\"100px\"}}),/*#__PURE__*/_jsx(\"br\",{}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){return _this3.addToCart(productDetails);},children:\" Add To Cart \"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\" \",this.state.message]})]})]});}}]);return ProductDetails;}(Component);export default ProductDetails;","map":{"version":3,"sources":["/Users/B0208058/Documents/my small ecommorce/ecommerce/src/components/searchAndBrowse/ProductDetails.js"],"names":["React","Component","HeaderNavbar","UserService","Grid","CircularProgress","Typography","Paper","TextField","Button","Notify","resolveResponse","ProductDetails","props","addToCart","productDetails","cartList","localStorage","getItem","JSON","parse","console","log","cartMsg","isProductAlreadyAdded","filter","item","productId","id","length","push","price","title","image","quantity","parseInt","state","setState","message","totalItemIntoCart","setItem","stringify","quantityChange","e","target","value","waitingFlag","window","location","href","split","getProductDetails","then","res","data","padding","textAlign","cursor","width","height","rating","rate","count"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport HeaderNavbar from '../HeaderNavbar'\nimport UserService from '../service/UserService'\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Typography, Paper } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport './ProductStyle.css';\nimport Button from '@mui/material/Button';\nimport Notify from '../utils/Notify'\n\nimport { resolveResponse } from \"../utils/ResponseHandler\";\nclass ProductDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            productDetails: \"\",\n            waitingFlag: true,\n            quantity: 1, \n            message: \"\", \n            totalItemIntoCart:0\n        }\n    }\n\n\n    componentDidMount() {\n        let productId = window.location.href.split('?')[1] && window.location.href.split('?')[1].split('=')[1];\n        UserService.getProductDetails(productId)\n            .then((res) => {\n                //   let data = resolveResponse(res); //common response handler\n\n                console.log(res.data);\n                if (res && res.data) {\n                    this.setState({\n                        title: res.data.title,\n                        waitingFlag: false,\n                        productDetails: res.data\n                    })\n                }\n            });\n\n    }\n\n    addToCart = (productDetails) => {\n       let cartList = localStorage.getItem('cartList') ? JSON.parse(localStorage.getItem('cartList')) : []; \n       console.log(\"cartList\",cartList);\n        let cartMsg=''; \n       let isProductAlreadyAdded = cartList.filter((item)=>item.productId == productDetails.id); \n       if(isProductAlreadyAdded.length === 0){\n        cartList.push({\n            productId: productDetails.id, \n            price: productDetails.price, \n            title:productDetails.title, \n            image:productDetails.image, \n            quantity: parseInt(this.state.quantity)  \n        })\n        cartMsg = `${this.state.quantity} ${this.state.quantity >1 ? \"same items added\" : \"item added\"}`; \n       }else{\n         isProductAlreadyAdded[0].quantity = parseInt(isProductAlreadyAdded[0].quantity) +  parseInt(this.state.quantity); \n         cartMsg = `${isProductAlreadyAdded[0].quantity} same items added`; \n       }\n\n       this.setState({message : cartMsg,  totalItemIntoCart:cartList.length}); \n    //    setTimeout(() => {\n    //     this.setState({message : ''}); \n    //    }, 5000);\n     //  Notify.showSuccess(msg);\n       localStorage.setItem('cartList', JSON.stringify(cartList)); \n    }\n\n    quantityChange = (e) => {\n        if (e.target.value <= 0)\n            this.setState({ quantity: 1 })\n        else\n            this.setState({ quantity: e.target.value })\n    }\n    render() {\n\n        let productDetails = this.state.productDetails;\n        console.log(\"productDetails\", productDetails)\n\n        return (\n            <React.Fragment>\n                <HeaderNavbar totalItem={this.state.totalItemIntoCart}/>\n\n                {this.state.waitingFlag ? <CircularProgress style={{ padding: \"25px\" }} /> : <Grid direction=\"row\" container spacing={5} style={{ padding: \"20px\" }}>\n\n\n                    <Grid item xs={12} sm={6} style={{ textAlign: \"center\" }}>\n                        <Paper style={{ textAlign: \"center\", cursor: 'pointer', padding: \"10px\" }} >\n                            <img style={{ width: \"50%\", height: \"400px\" }} src={productDetails.image} /> <br />\n                            {productDetails.title}\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} style={{ textAlign: \"left\" }}>\n                        <Typography variant=\"h5\" component=\"p\" >\n                            {productDetails.title}\n                        </Typography>\n                        <br />\n                        <Typography variant=\"h5\" component=\"p\" >\n                            &#8377; {productDetails.price}\n                        </Typography>\n                        <br />\n                        Ratings {productDetails.rating && productDetails.rating.rate}* ({productDetails.rating && productDetails.rating.count})\n                        <br /> <br />\n                        <TextField type=\"number\" onChange={this.quantityChange} value={this.state.quantity} style={{ width: \"100px\" }} />\n                        <br /> <br />\n                        <Button variant=\"contained\" onClick={() => this.addToCart(productDetails)}> Add To Cart </Button>\n\n                        <br /><br /> {this.state.message}\n\n                    </Grid>\n\n                </Grid>}\n\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ProductDetails;"]},"metadata":{},"sourceType":"module"}